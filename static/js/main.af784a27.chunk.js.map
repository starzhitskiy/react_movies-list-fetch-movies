{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilm","searchQuery","a","URL","toLowerCase","split","join","fetch","response","json","film","FindMovie","addMovie","useState","query","setQuery","errorVisibility","seterrorVisibility","filmsInList","setFilmInList","setFilm","useEffect","document","querySelector","classList","remove","handleSubmitFindMovie","event","preventDefault","Title","Plot","Poster","imdbID","Response","add","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","onClick","includes","App","state","data","setState","prevState","concat","this","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af784a27.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=f353cda5&t=';\n\nexport const getFilm = async(searchQuery) => {\n  const URL = BASE_URL + (searchQuery.toLowerCase().split(' ').join('+'));\n  const response = await fetch(URL);\n  const film = await response.json();\n\n  return film;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/api';\n\nconst imdbUrl = 'https://www.imdb.com/title/';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [errorVisibility, seterrorVisibility] = useState(false);\n  const [filmsInList, setFilmInList] = useState([\n    'tt1375666', 'tt0314331', 'tt0319262', 'tt3748528', 'tt0457939',\n  ]);\n  const [film, setFilm] = useState({\n    title: null,\n    description: null,\n    imgUrl: null,\n    imdbUrl: null,\n    imdbId: null,\n    response: false,\n  });\n\n  useEffect(() => {\n    if (errorVisibility) {\n      seterrorVisibility(false);\n    }\n\n    document.querySelector('.input').classList.remove('is-danger');\n  }, [query]);\n\n  const hadleClickAddToList = () => {\n    setQuery('');\n\n    if (!film.response) {\n      return;\n    }\n\n    if (filmsInList.includes(film.imdbId)) {\n      return;\n    }\n\n    setFilmInList([...filmsInList, film.imdbId]);\n    addMovie(film);\n  };\n\n  const handleSubmitFindMovie = async(event) => {\n    if (query === '') {\n      return;\n    }\n\n    event.preventDefault();\n\n    const movie = await getFilm(query);\n    const { Title, Plot, Poster, imdbID, Response } = movie;\n\n    if (Response === 'True') {\n      setFilm({\n        title: Title,\n        description: Plot,\n        imgUrl: Poster,\n        imdbId: imdbID,\n        imdbUrl: imdbUrl + imdbID,\n        response: Response === 'True',\n      });\n    } else {\n      setFilm({});\n      seterrorVisibility(true);\n      document.querySelector('input').classList.add('is-danger');\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmitFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n            />\n          </div>\n\n          {errorVisibility && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title.\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={hadleClickAddToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {film.response && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...film} />\n      </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (film) => {\n    this.setState(prevState => ({\n      movies: prevState.movies.concat(film),\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}